/*
 * Copyright (C) 2022  Mikusch
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CBaseEntity::GetNextThink"
			{
				"library"	"server"
				"linux" 	"@_ZN11CBaseEntity12GetNextThinkEPKc"
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x56\x8B\xF1\x85\xC0\x75\x2A\x8B\x86\xD0\x00\x00\x00\x89\x45\x08"
			}
			"CBaseEntity::PhysicsDispatchThink"
			{
				"library"	"server"
				"linux" 	"@_ZN11CBaseEntity20PhysicsDispatchThinkEMS_FvvE"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x83\xEC\x08\x83\x78\x30\x00\x53"
			}
		}
		"Offsets"
		{
			"CBaseProjectile::CanCollideWithTeammates"
			{
				"library"	"server"
				"linux"		"227"
				"windows"	"226"
			}
			"CBasePlayer::WantsLagCompensationOnEntity"
			{
				"library"	"server"
				"linux"		"332"
				"windows"	"331"
			}
			"CTFSniperRifle::GetCustomDamageType"
			{
				"library"	"server"
				"linux"		"383"
				"windows"	"377"
			}
			"CTFSniperRifle::GetPenetrateType"
			{
				"library"	"server"
				"linux"		"403"
				"windows"	"396"
			}
		}
		"Functions"
		{
			"CBaseEntity::PhysicsDispatchThink"
			{
				"signature"	"CBaseEntity::PhysicsDispatchThink"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"thinkFunc"
					{
						"type"	"objectptr"
					}
				}
			}
			"CBaseProjectile::CanCollideWithTeammates"
			{
				"offset"	"CBaseProjectile::CanCollideWithTeammates"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
			}
			"CBasePlayer::WantsLagCompensationOnEntity"
			{
				"offset"	"CBasePlayer::WantsLagCompensationOnEntity"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
					"pCmd"
					{
						"type"	"objectptr"
					}
					"pEntityTransmitBits"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFSniperRifle::GetCustomDamageType"
			{
				"offset"	"CTFSniperRifle::GetCustomDamageType"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
			}
		}
	}
}
