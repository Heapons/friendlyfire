/*
 * Copyright (C) 2022  Mikusch
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CBaseEntity::GetNextThink"
			{
				"library"	"server"
				"linux" 	"@_ZN11CBaseEntity12GetNextThinkEPKc"
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x56\x8B\xF1\x85\xC0\x75\x2A\x8B\x86\xD0\x00\x00\x00\x89\x45\x08"
			}
			"CBaseEntity::PhysicsDispatchThink"
			{
				"library"	"server"
				"linux" 	"@_ZN11CBaseEntity20PhysicsDispatchThinkEMS_FvvE"
				"windows"	"\x55\x8B\xEC\xA1\x2A\x2A\x2A\x2A\x83\xEC\x08\x83\x78\x30\x00\x53"
			}
			"CBaseEntity::InSameTeam"
			{
				"library"	"server"
				"linux"		"@_ZNK11CBaseEntity10InSameTeamEPKS_"
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\x57\x8B\xF9\x85\xC0\x75\x2A"
			}
			"GetGlobalTeam"
			{
				"library"	"server"
				"linux"		"@_Z13GetGlobalTeami"
				"windows"	"\x55\x8B\xEC\x8B\x4D\x08\x85\xC9\x78\x2A\x3B\x0D\x2A\x2A\x2A\x2A\x7D\x2A\xA1\x2A\x2A\x2A\x2A\x8B\x04\x88\x5D\xC3"
			}
			"CBaseObject::CreateBuildPoints"
			{
				"library"	"server"
				"linux"		"@_ZN11CBaseObject17CreateBuildPointsEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x53\x56\x8B\xD9\x57\x6A\x20"
			}
		}
		"Offsets"
		{
			"CBaseProjectile::CanCollideWithTeammates"
			{
				"library"	"server"
				"linux"		"230"
				"windows"	"229"
			}
			"CTFSniperRifle::GetCustomDamageType"
			{
				"library"	"server"
				"linux"		"386"
				"windows"	"380"
			}
			"CTFSniperRifle::GetPenetrateType"
			{
				"library"	"server"
				"linux"		"406"
				"windows"	"399"
			}
			"CBaseGrenade::Explode"
			{
				"library"	"server"
				"linux"		"236"
				"windows"	"235"
			}
			"CTeam::AddPlayer"
			{
				"library"	"server"
				"linux"		"209"
				"windows"	"208"
			}
			"CTeam::RemovePlayer"
			{
				"library"	"server"
				"linux"		"210"
				"windows"	"209"
			}
			"CBaseEntity::ChangeTeam"
			{
				"library"	"server"
				"linux"		"97"
				"windows"	"96"
			}
			"CBasePlayer::Event_Killed"
			{
				"library"	"server"
				"linux"		"69"
				"windows"	"68"
			}
			"CTFWeaponBaseMelee::Smack"
			{
				"library"	"server"
				"linux"		"476"
				"windows"	"469"
			}
			"CTFWeaponBase::SecondaryAttack"
			{
				"library"	"server"
				"linux"		"293"
				"windows"	"287"
			}
		}
		"Functions"
		{
			"CBaseEntity::PhysicsDispatchThink"
			{
				"signature"	"CBaseEntity::PhysicsDispatchThink"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"thinkFunc"
					{
						"type"	"int"
					}
				}
			}
			"CBaseGrenade::Explode"
			{
				"offset"	"CBaseGrenade::Explode"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pTrace"
					{
						"type"	"int"
					}
					"bitsDamageType"
					{
						"type"	"int"
					}
				}
			}
			"CBaseProjectile::CanCollideWithTeammates"
			{
				"offset"	"CBaseProjectile::CanCollideWithTeammates"
				"hooktype"	"entity"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFSniperRifle::GetCustomDamageType"
			{
				"offset"	"CTFSniperRifle::GetCustomDamageType"
				"hooktype"	"entity"
				"return"	"int"
				"this"		"entity"
			}
			"CBasePlayer::Event_Killed"
			{
				"offset"	"CBasePlayer::Event_Killed"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"info"
					{
						"type"	"objectptr"
					}
				}
			}
			"CTFWeaponBaseMelee::Smack"
			{
				"offset"	"CTFWeaponBaseMelee::Smack"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFWeaponBase::SecondaryAttack"
			{
				"offset"	"CTFWeaponBase::SecondaryAttack"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBaseEntity::InSameTeam"
			{
				"signature"	"CBaseEntity::InSameTeam"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pEntity"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseObject::CreateBuildPoints"
			{
				"signature"	"CBaseObject::CreateBuildPoints"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
		}
	}
}
